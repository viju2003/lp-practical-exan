9. Write a program to simulate CPU Scheduling Algorithms: FCFS and Round Robin.
Process        AT                  BT
P1             10                   2
P2             0                    10
P3             8                    4
P4             5                    5

1. @@@@@@@ [FCFS]

import java.util.Scanner;

public class FCFS {
    public static void swap(int[] a, int s1, int s2) {
        int temp = a[s1];
        a[s1] = a[s2];
        a[s2] = temp;
    }
        public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter no of process: ");
        int n = sc.nextInt();
        int pid[] = new int[n];
        int at[] = new int[n];
        int bt[] = new int[n];
        int ct[] = new int[n];
        int ta[] = new int[n];
        int wt[] = new int[n];
        float avgwt = 0, avgta = 0;

        for (int i = 0; i < n; i++) {
            System.out.println("Enter PID " + (i + 1) + "'s Arival Time: ");
            at[i] = sc.nextInt();
            System.out.println("Enter PID " + (i + 1) + "'s Burst Time: ");
            bt[i] = sc.nextInt();
            pid[i] = i + 1;
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n - (i + 1); j++) {
                if (at[j] > at[j + 1]) {
                    swap(at, j, j + 1);
                    swap(bt, j, j + 1);
                    swap(pid, j, j + 1);
                }
            }
        }

        for (int i = 0; i < n; i++) {
            if (i == 0) {
                ct[i] = at[i] + bt[i];
            } else {
                if (at[i] > ct[i - 1]) {
                    ct[i] = at[i] + bt[i];
                } else
                    ct[i] = ct[i - 1] + bt[i];
            }
            ta[i] = ct[i] - at[i];
            wt[i] = ta[i] - bt[i];
            avgwt += wt[i];
            avgta += ta[i];
        }
        System.out.println("\nPID\tAT\tBT\tCT\tTAT\tWT");
        for (int i = 0; i < n; i++) {
            System.out.println(pid[i] + "  \t " + at[i] + "\t" + bt[i] + "\t" + ct[i] + "\t" + ta[i] + "\t" + wt[i]);
        }
        sc.close();
        System.out.println("\nAverage TAT = " + (avgwt / n));
        System.out.println("Average WT = " + (avgta / n));
    }
}




2.  @@@@@@@@     [Round Robin]
import java.util.Scanner;

public class Round_Robin {
    public static void main(String args[]) {
        int n, i, qt, count = 0, temp, sq = 0, bt[], wt[], tat[], rem_bt[];
        float awt = 0, atat = 0;
        bt = new int[10];
        wt = new int[10];
        tat = new int[10];
        rem_bt = new int[10];
        try (Scanner sc = new Scanner(System.in)) {
            System.out.print("Enter the number of processes = ");
            n = sc.nextInt();
            System.out.print("Enter the burst time of the process:\n");
            for (i = 0; i < n; i++) {
                System.out.print("P" + (i + 1) + " = ");
                bt[i] = sc.nextInt();
                rem_bt[i] = bt[i];
            }
            System.out.print("Enter the quantum time: ");
            qt = sc.nextInt();
            while (true) {
                for (i = 0, count = 0; i < n; i++) {
                    temp = qt;
                    if (rem_bt[i] == 0) {
                        count++;
                        continue;
                    }
                    if (rem_bt[i] > qt)
                        rem_bt[i] = rem_bt[i] - qt;
                    else if (rem_bt[i] >= 0) {
                        temp = rem_bt[i];
                        rem_bt[i] = 0;
                    }
                    sq = sq + temp;
                    tat[i] = sq;
                }
                if (n == count)
                    break;
            }

            System.out.print("\nPID\tBT\tTAT\tWT\n");

            for (i = 0; i < n; i++) {
                wt[i] = tat[i] - bt[i];
                awt = awt + wt[i];
                atat = atat + tat[i];
                System.out.print("\n " + (i + 1) + "\t " + bt[i] + "\t " + tat[i] + "\t " + wt[i] + "\n");
            }
            awt = awt / n;
            atat = atat / n;
            sc.close();
        }
        System.out.println("\nAverage Waiting Time (WT) = " + awt + "\n");
        System.out.println("Average Turn Around Time (TAT) = " + atat);
    }
}
